{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thema\\\\Documents\\\\Project\\\\frontend\\\\src\\\\contexts\\\\AuthContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext({});\n\nfunction AuthProvider(props) {\n  _s();\n\n  const [authenticated, setAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      api.defaults.headers.Authorization = `Bearer ${JSON.parse(token)}`;\n      setAuthenticated(true);\n    }\n\n    setLoading(false);\n  }, []);\n\n  async function register(user) {\n    setLoading(true);\n\n    try {\n      const data = await api.post('/users/register', user).then(response => {\n        toast.success(\"Cadastro realizado com sucesso!\");\n        return response.data;\n      });\n      setLoading(false);\n      await authUser(data);\n      console.log(data);\n    } catch (error) {\n      setLoading(false);\n      toast.error(JSON.stringify(error.response.data.message));\n    }\n  }\n\n  async function authUser(data) {\n    setAuthenticated(true);\n    localStorage.setItem('token', JSON.stringify(data.token));\n    navigate('/');\n  }\n\n  async function login(user) {\n    setLoading(true);\n\n    try {\n      const data = await api.post('/users/login', user).then(response => {\n        setLoading(false);\n        setAuthenticated(true);\n        return response.data;\n      });\n      authUser(data);\n    } catch (error) {\n      setLoading(false);\n      toast.error(JSON.stringify(error.response.data.message));\n    }\n  }\n\n  async function logout() {\n    setAuthenticated(false);\n    localStorage.removeItem('token');\n    api.defaults.headers.Authorization = undefined;\n    toast.success('Logout realizado com sucesso!');\n    navigate('/login');\n  }\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      register,\n      login,\n      logout,\n      loading,\n      authenticated\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AuthProvider, \"xm+ePZ1E99vKln+15wv+LR5kI1A=\", false, function () {\n  return [useNavigate];\n});\n\n_c = AuthProvider;\nexport default AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["C:/Users/thema/Documents/Project/frontend/src/contexts/AuthContext.tsx"],"names":["createContext","useEffect","useState","useNavigate","toast","api","AuthContext","AuthProvider","props","authenticated","setAuthenticated","loading","setLoading","navigate","token","localStorage","getItem","defaults","headers","Authorization","JSON","parse","register","user","data","post","then","response","success","authUser","console","log","error","stringify","message","setItem","login","logout","removeItem","undefined","children"],"mappings":"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","sourcesContent":["import {createContext, ReactNode, useEffect, useState} from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nimport { toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.min.css'; \n\nimport api from '../services/api'\n\ntype User = {\n  name: string;\n  username: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n}\n\ntype AuthContextType = {\n  register: () =>  Promise<void>;\n  login: () =>  Promise<void>;\n  logout: () =>  Promise<void>;\n}\n\ntype AuthContextProviderProps = {\n  children: ReactNode;\n}\n\nexport const AuthContext = createContext({} as AuthContextType)\n\nfunction AuthProvider(props: AuthContextProviderProps){\n  const [authenticated, setAuthenticated] = useState(false)\n  const [loading, setLoading] = useState(false)\n  const navigate = useNavigate()\n\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    if(token){\n      api.defaults.headers.Authorization = `Bearer ${JSON.parse(token)}`\n      setAuthenticated(true)\n    }\n\n    setLoading(false)\n  }, [])\n\n  async function register(user: User){\n    setLoading(true)\n\n    try {\n      const data = await api.post('/users/register', user)\n      .then((response) => {\n        toast.success(\"Cadastro realizado com sucesso!\")\n        return response.data\n      })\n      setLoading(false)\n      await authUser(data)\n      console.log(data)\n\n    } catch (error) {\n      setLoading(false)\n      toast.error(JSON.stringify(error.response.data.message) )\n    }\n  }\n  \n  async function authUser(data){\n    setAuthenticated(true)\n    localStorage.setItem('token', JSON.stringify(data.token))\n    navigate('/')\n  }\n\n  async function login(user: User){\n    setLoading(true)\n\n    try {\n      const data = await api.post('/users/login', user)\n      .then((response) => {\n        setLoading(false)\n        setAuthenticated(true)\n        return response.data\n      })\n\n      authUser(data)\n    } catch (error) {\n      setLoading(false)\n      toast.error(JSON.stringify(error.response.data.message))\n    }\n  }\n\n  async function logout(){\n    setAuthenticated(false)\n    localStorage.removeItem('token')\n    api.defaults.headers.Authorization = undefined\n    toast.success('Logout realizado com sucesso!')\n    navigate('/login')\n  }\n\n  return(\n    <AuthContext.Provider value={{register, login, logout, loading, authenticated}}>\n      {props.children}\n    </AuthContext.Provider>\n  )\n\n}\n\nexport default AuthProvider"]},"metadata":{},"sourceType":"module"}