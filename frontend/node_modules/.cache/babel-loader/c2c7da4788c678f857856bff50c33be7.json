{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thema\\\\Documents\\\\Project\\\\frontend\\\\src\\\\pages\\\\Publications\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport api from \"../../services/api\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Header from \"../../components/index\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport { FiUpload } from \"react-icons/fi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Publication() {\n  _s();\n\n  const [post, setPost] = useState({});\n  const [preview, setPreview] = useState([]);\n  const [token] = useState(localStorage.getItem(\"token\") || \"\");\n  const navigate = useNavigate();\n\n  function onFileChange(e) {\n    setPreview(Array.from(e.target.files));\n    setPost({ ...post,\n      images: [...e.target.files]\n    });\n  }\n\n  function handleChange(e) {\n    setPost({ ...post,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    const formData = new FormData();\n    const postFormData = Object.keys(post).forEach(key => {\n      if (key === \"images\") {\n        for (let i = 0; i < post[key].length; i++) {\n          formData.append(`images`, post[key][i]);\n        }\n      } else {\n        formData.append(key, post[key]);\n      }\n    });\n    formData.append(\"post\", JSON.stringify(postFormData));\n    await api.post(`/publications/createpublication`, formData, {\n      headers: {\n        Authorization: `Bearer ${JSON.parse(token)}`,\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    }).then(response => {\n      navigate(\"/home\");\n      toast.success(\"Post cadastrado com sucesso\");\n      return response.data;\n    }).catch(err => {\n      toast.error(JSON.stringify(err.response.data.message));\n      return err.response.data;\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"container_home\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Publica\\xE7\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(FiUpload, {\n            color: \"#FFF\",\n            size: 25\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"image\",\n          onChange: onFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"legenda\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Enviar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Publication, \"yERrABe7zbfLQcMR+QRXQJiDscI=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Publication;\n\nvar _c;\n\n$RefreshReg$(_c, \"Publication\");","map":{"version":3,"sources":["C:/Users/thema/Documents/Project/frontend/src/pages/Publications/index.tsx"],"names":["api","useState","useNavigate","Header","toast","FiUpload","Publication","post","setPost","preview","setPreview","token","localStorage","getItem","navigate","onFileChange","e","Array","from","target","files","images","handleChange","name","value","handleSubmit","preventDefault","formData","FormData","postFormData","Object","keys","forEach","key","i","length","append","JSON","stringify","headers","Authorization","parse","then","response","success","data","catch","err","error","message"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,oBAAhB;AAEA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,OAAOC,MAAP,MAAmB,wBAAnB;AAEA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAO,2CAAP;AAEA,SAASC,QAAT,QAAyB,gBAAzB;;AASA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AACpC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACU,KAAD,IAAUV,QAAQ,CAACW,YAAY,CAACC,OAAb,CAAqB,OAArB,KAAiC,EAAlC,CAAxB;AACA,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;;AAEA,WAASa,YAAT,CAAsBC,CAAtB,EAA8B;AAC5BN,IAAAA,UAAU,CAACO,KAAK,CAACC,IAAN,CAAWF,CAAC,CAACG,MAAF,CAASC,KAApB,CAAD,CAAV;AACAZ,IAAAA,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAWc,MAAAA,MAAM,EAAE,CAAC,GAAGL,CAAC,CAACG,MAAF,CAASC,KAAb;AAAnB,KAAD,CAAP;AACD;;AAED,WAASE,YAAT,CAAsBN,CAAtB,EAA8B;AAC5BR,IAAAA,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAW,OAACS,CAAC,CAACG,MAAF,CAASI,IAAV,GAAiBP,CAAC,CAACG,MAAF,CAASK;AAArC,KAAD,CAAP;AACD;;AAED,iBAAeC,YAAf,CAA4BT,CAA5B,EAAoC;AAClCA,IAAAA,CAAC,CAACU,cAAF;AACA,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AAEA,UAAMC,YAAY,GAAGC,MAAM,CAACC,IAAP,CAAYxB,IAAZ,EAAkByB,OAAlB,CAA2BC,GAAD,IAAS;AACtD,UAAIA,GAAG,KAAK,QAAZ,EAAsB;AACpB,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG3B,IAAI,CAAC0B,GAAD,CAAJ,CAAUE,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACzCP,UAAAA,QAAQ,CAACS,MAAT,CAAiB,QAAjB,EAA0B7B,IAAI,CAAC0B,GAAD,CAAJ,CAAUC,CAAV,CAA1B;AACD;AACF,OAJD,MAIO;AACLP,QAAAA,QAAQ,CAACS,MAAT,CAAgBH,GAAhB,EAAqB1B,IAAI,CAAC0B,GAAD,CAAzB;AACD;AACF,KARoB,CAArB;AAUAN,IAAAA,QAAQ,CAACS,MAAT,CAAgB,MAAhB,EAAwBC,IAAI,CAACC,SAAL,CAAeT,YAAf,CAAxB;AAEA,UAAM7B,GAAG,CACNO,IADG,CACG,iCADH,EACqCoB,QADrC,EAC+C;AACjDY,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASH,IAAI,CAACI,KAAL,CAAW9B,KAAX,CAAkB,EADpC;AAEP,wBAAgB;AAFT;AADwC,KAD/C,EAOH+B,IAPG,CAOGC,QAAD,IAAc;AAClB7B,MAAAA,QAAQ,CAAC,OAAD,CAAR;AACAV,MAAAA,KAAK,CAACwC,OAAN,CAAc,6BAAd;AACA,aAAOD,QAAQ,CAACE,IAAhB;AACD,KAXG,EAYHC,KAZG,CAYIC,GAAD,IAAS;AACd3C,MAAAA,KAAK,CAAC4C,KAAN,CAAYX,IAAI,CAACC,SAAL,CAAeS,GAAG,CAACJ,QAAJ,CAAaE,IAAb,CAAkBI,OAAjC,CAAZ;AACA,aAAOF,GAAG,CAACJ,QAAJ,CAAaE,IAApB;AACD,KAfG,CAAN;AAgBD;;AAED,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAS,MAAA,SAAS,EAAC,gBAAnB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,+BAEI;AAAA,iCACE,QAAC,QAAD;AAAU,YAAA,KAAK,EAAC,MAAhB;AAAuB,YAAA,IAAI,EAAE;AAA7B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,cAFF,eAUE;AAAM,QAAA,QAAQ,EAAEpB,YAAhB;AAAA,gCACE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,OAAxB;AAAgC,UAAA,QAAQ,EAAEV;AAA1C;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,SAFP;AAGE,UAAA,QAAQ,EAAEO;AAHZ;AAAA;AAAA;AAAA;AAAA,gBAFF,eAOE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GA1EuBhB,W;UAILJ,W;;;KAJKI,W","sourcesContent":["import api from \"../../services/api\";\r\n\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport Header from \"../../components/index\";\r\n\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.min.css\";\r\n\r\nimport { FiUpload } from \"react-icons/fi\";\r\n\r\ninterface IPost {\r\n  subtitle: string;\r\n  _id: string;\r\n  image: string;\r\n  [key: string]: any;\r\n}\r\n\r\nexport default function Publication() {\r\n  const [post, setPost] = useState({} as IPost)\r\n  const [preview, setPreview] = useState([] as any)\r\n  const [token] = useState(localStorage.getItem(\"token\") || \"\");\r\n  const navigate = useNavigate();\r\n\r\n  function onFileChange(e: any) {\r\n    setPreview(Array.from(e.target.files))\r\n    setPost({ ...post, images: [...e.target.files] })\r\n  }\r\n\r\n  function handleChange(e: any) {\r\n    setPost({ ...post, [e.target.name]: e.target.value })\r\n  }\r\n\r\n  async function handleSubmit(e: any) {\r\n    e.preventDefault()\r\n    const formData = new FormData();\r\n\r\n    const postFormData = Object.keys(post).forEach((key) => {\r\n      if (key === \"images\") {\r\n        for (let i = 0; i < post[key].length; i++) {\r\n          formData.append(`images`, post[key][i]);\r\n        }\r\n      } else {\r\n        formData.append(key, post[key]);\r\n      }\r\n    });\r\n\r\n    formData.append(\"post\", JSON.stringify(postFormData) );\r\n\r\n    await api\r\n      .post(`/publications/createpublication`, formData, {\r\n        headers: {\r\n          Authorization: `Bearer ${JSON.parse(token)}`,\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        navigate(\"/home\");\r\n        toast.success(\"Post cadastrado com sucesso\");\r\n        return response.data;\r\n      })\r\n      .catch((err) => {\r\n        toast.error(JSON.stringify(err.response.data.message));\r\n        return err.response.data;\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <section className=\"container_home\">\r\n        <h1>Publicação</h1>\r\n        <div>\r\n         \r\n            <span>\r\n              <FiUpload color=\"#FFF\" size={25} />\r\n            </span>\r\n           \r\n          </div>\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          <input type=\"file\" name=\"image\" onChange={onFileChange} />\r\n          <input\r\n            type=\"text\"\r\n            name=\"legenda\"\r\n            onChange={handleChange}\r\n          />\r\n          <button type=\"submit\">Enviar</button>\r\n        </form>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}