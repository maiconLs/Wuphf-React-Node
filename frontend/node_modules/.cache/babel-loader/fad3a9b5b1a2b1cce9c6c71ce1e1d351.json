{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thema\\\\Documents\\\\Project\\\\frontend\\\\src\\\\pages\\\\Publications\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport api from \"../../services/api\";\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Header from \"../../components/index\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Publication() {\n  _s();\n\n  const [user, setUser] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [post, setPost] = useState([]);\n  const [preview, setPreview] = useState([]);\n  const [token] = useState(localStorage.getItem(\"token\") || \"\");\n  const navigate = useNavigate();\n  useEffect(() => {\n    api.get(\"/users/checkuser\", {\n      headers: {\n        Authorization: `Bearer ${JSON.parse(token)} `\n      }\n    }).then(response => {\n      setUser(response.data);\n    });\n  }, [token]);\n\n  function onFileChange(e) {\n    setPreview(Array.from(e.target.files));\n    setPost({ ...post,\n      images: [...e.target.files]\n    });\n  }\n\n  function handleChange(e) {\n    setPost({ ...post,\n      [e.target.name]: e.target.value\n    });\n    console.log(post);\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    const formData = new FormData();\n    const postFormData = Object.keys(post).forEach(key => {\n      if (key === \"images\") {\n        for (let i = 0; i < post[key].length; i++) {\n          formData.append(`images`, post[key][i]);\n        }\n      } else {\n        formData.append(key, post[key]);\n      }\n    });\n    formData.append(\"post\", JSON.stringify(postFormData));\n    await api.post(`/publications/createpublication`, formData, {\n      headers: {\n        Authorization: `Bearer ${JSON.parse(token)}`,\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    }).then(response => {\n      navigate(\"/\");\n      toast.success(\"Post cadastrado com sucesso\");\n      return response.data;\n    }).catch(err => {\n      toast.error(JSON.stringify(err.response.data.message));\n      return err.response.data;\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      avatar: `${process.env.REACT_APP_API}/images/users/${user.image}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"container_home\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Publica\\xE7\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: preview.length > 0 ? preview.map((image, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n            src: URL.createObjectURL(image),\n            alt: post.name\n          }, `${post.name}+${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 19\n          }, this)) : post.images && post.images.map((image, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `${process.env.REACT_APP_API}/images/posts/${image}`,\n            alt: post.name\n          }, `${post._id}+${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"images\",\n          multiple: true,\n          onChange: onFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"legesubtitlenda\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Enviar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Publication, \"+svraF/5kPU67vbClmT2KLNObsw=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Publication;\n\nvar _c;\n\n$RefreshReg$(_c, \"Publication\");","map":{"version":3,"sources":["C:/Users/thema/Documents/Project/frontend/src/pages/Publications/index.tsx"],"names":["api","useState","useEffect","useNavigate","Header","toast","Publication","user","setUser","loading","setLoading","post","setPost","preview","setPreview","token","localStorage","getItem","navigate","get","headers","Authorization","JSON","parse","then","response","data","onFileChange","e","Array","from","target","files","images","handleChange","name","value","console","log","handleSubmit","preventDefault","formData","FormData","postFormData","Object","keys","forEach","key","i","length","append","stringify","success","catch","err","error","message","process","env","REACT_APP_API","image","map","index","URL","createObjectURL","_id"],"mappings":"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","sourcesContent":["import api from \"../../services/api\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport Header from \"../../components/index\";\r\n\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.min.css\";\r\n\r\nimport { FiUpload } from \"react-icons/fi\";\r\n\r\ninterface IPost {\r\n  subtitle: string;\r\n  _id: string;\r\n  image: string;\r\n  [key: string]: any;\r\n}\r\n\r\ninterface IUser {\r\n  name: string;\r\n  username: string;\r\n  email: string;\r\n  _id: string;\r\n  image?: string;\r\n  [key: string]: any;\r\n}\r\n\r\nexport default function Publication() {\r\n  const [user, setUser] = useState({} as IUser);\r\n  const [loading, setLoading] = useState(false);\r\n  const [post, setPost] = useState([]  as unknown as IPost);\r\n  const [preview, setPreview] = useState([] as any);\r\n  const [token] = useState(localStorage.getItem(\"token\") || \"\");\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    api\r\n      .get(\"/users/checkuser\", {\r\n        headers: {\r\n          Authorization: `Bearer ${JSON.parse(token)} `,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setUser(response.data);\r\n      });\r\n  }, [token]);\r\n\r\n  function onFileChange(e: any) {\r\n    setPreview(Array.from(e.target.files));\r\n    setPost({ ...post, images: [...e.target.files] });\r\n  }\r\n\r\n  function handleChange(e: any) {\r\n    setPost({ ...post, [e.target.name]: e.target.value });\r\n    console.log(post)\r\n  }\r\n\r\n  async function handleSubmit(e: any) {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n\r\n    const postFormData = Object.keys(post).forEach((key) => {\r\n      if (key === \"images\") {\r\n        for (let i = 0; i < post[key].length; i++) {\r\n          formData.append(`images`, post[key][i]);\r\n        }\r\n      } else {\r\n        formData.append(key, post[key]);\r\n      }\r\n    });\r\n\r\n    formData.append(\"post\", JSON.stringify(postFormData));\r\n\r\n    await api\r\n      .post(`/publications/createpublication`, formData, {\r\n        headers: {\r\n          Authorization: `Bearer ${JSON.parse(token)}`,\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        navigate(\"/\");\r\n        toast.success(\"Post cadastrado com sucesso\");\r\n        return response.data;\r\n      })\r\n      .catch((err) => {\r\n        toast.error(JSON.stringify(err.response.data.message));\r\n        return err.response.data;\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header avatar={`${process.env.REACT_APP_API}/images/users/${user.image}`}/>\r\n      <section className=\"container_home\">\r\n        <h1>Publicação</h1>\r\n        <div>\r\n          <div>\r\n            {preview.length > 0\r\n              ? preview.map((image: Blob | MediaSource, index: any) => (\r\n                  <img\r\n                    src={URL.createObjectURL(image)}\r\n                    alt={post.name}\r\n                    key={`${post.name}+${index}`}\r\n                  />\r\n                ))\r\n              : post.images &&\r\n                post.images.map((image: any, index: any) => (\r\n                  <img\r\n                    src={`${process.env.REACT_APP_API}/images/posts/${image}`}\r\n                    alt={post.name}\r\n                    key={`${post._id}+${index}`}\r\n                  />\r\n                ))}\r\n          </div>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          <input type=\"file\" name=\"images\" multiple onChange={onFileChange} />\r\n          <input type=\"text\" name=\"legesubtitlenda\" onChange={handleChange} />\r\n          <button type=\"submit\">Enviar</button>\r\n        </form>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}